{"version":3,"sources":["webpack://mongoliya.local/./src/js/libs/syoTimer/jquery.syotimer.js","webpack://mongoliya.local/./src/js/libs/syoTimer/syotimer.lang.js","webpack://mongoliya.local/webpack/bootstrap","webpack://mongoliya.local/webpack/runtime/compat get default export","webpack://mongoliya.local/webpack/runtime/define property getters","webpack://mongoliya.local/webpack/runtime/hasOwnProperty shorthand","webpack://mongoliya.local/./src/js/home.js"],"names":["DAY","HOUR","MINUTE","SECOND","LAYOUT_TYPES","d","h","m","s","UNIT_LINKED_LIST","list","next","current","currentIndex","this","indexOf","length","prev","DEFAULTS","year","month","day","hour","minute","second","timeZone","ignoreTransferTime","layout","periodic","periodInterval","periodUnit","doubleNumbers","effectType","lang","headTitle","footTitle","afterDeadline","timerBlock","bodyBlock","html","ITEMS_HAS_OPTIONS","SyoTimer","init","settings","options","$","extend","itemTypes","staticMethod","getItemTypesByLayout","_itemsHas","i","each","data","_render","apply","_perSecondHandler","elementBox","timerItem","getTimerItem","headBlock","footBlock","itemBlocks","item","clone","addClass","append","timerBlocks","css","currentDate","Date","deadLineDate","differenceInMilliSec","getDifferenceWithTimezone","secondsToDeadLine","getSecondsToDeadLine","_refreshUnitsDom","_applyEffectSwitch","unitList","unitsToDeadLine","getUnitsToDeadLine","unit","unitValue","itemBlock","format2","syotimerLang","getNumeral","element","setTimeout","unitItemBlock","nextUnit","animate","opacity","timerCellValue","timerCellUnit","timerCell","push","differenceInSeconds","Math","floor","additionalInUnit","differenceInUnit","periodUnitInSeconds","getPeriodUnit","fullTimeUnitsBetween","ceil","abs","unitInMilliSec","given_period_unit","differenceByLocalTimezone","getTime","amendmentOnTimezone","amendmentOnTransferTime","parseFloat","getTimezoneOffset","number","isUse","methods","setOption","name","value","hasOwnProperty","fn","syotimer","otherArgs","Array","prototype","slice","call","arguments","error","rus","handler","eng","por","spa","heb","universal","rusNumeral","index","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","n","getter","__esModule","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","countdown","countdown_time","text","split","ajax","url","type","dataType","limit","done","res","reviews","output","forEach","date","created_at","photo","mark","city","msg","swiper","mode","speed","loop","autoplayDisableOnInteraction","nextButton","prevButton","fail","err","console","log"],"mappings":"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","file":"home.js","sourcesContent":["    var DAY = \"day\",\n        HOUR = \"hour\",\n        MINUTE = \"minute\",\n        SECOND = \"second\";\n    var DAY_IN_SEC = 24 * 60 * 60;\n    var HOUR_IN_SEC = 60 * 60;\n    var MINUTE_IN_SEC = 60;\n    var LAYOUT_TYPES = {\n            d: DAY,\n            h: HOUR,\n            m: MINUTE,\n            s: SECOND\n        };\n    var UNIT_LINKED_LIST = {\n            list: [SECOND, MINUTE, HOUR, DAY],\n            next: function(current) {\n                var currentIndex = this.list.indexOf(current);\n                return (currentIndex < this.list.length ) ? this.list[currentIndex + 1] : false;\n            },\n            prev: function(current) {\n                var currentIndex = this.list.indexOf(current);\n                return (currentIndex > 0 ) ? this.list[currentIndex - 1] : false;\n            }\n        };\n\n    var DEFAULTS = {\n        year: 2034,\n        month: 7,\n        day: 31,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        timeZone: 'local',          // setting the time zone of deadline.\n                                    // If 'local' then the time zone is ignored and\n                                    // the deadline is determined by local time of the user.\n                                    // Otherwise, specifies the offset from the UTC\n        ignoreTransferTime: false,  // If `true` then transfer to summer/winter time will not be considered.\n        layout: 'dhms',             // sets an order of layout of units of the timer:\n                                    // days (d) of hours ('h'), minute ('m'), second ('s').\n        periodic: false,            //`true` - the timer is periodic.\n                                    // If the date until which counts the timer is reached,\n                                    // the next value date which will count down\n                                    // the timer is incremented by the value `periodInterval`\n        periodInterval: 7,          // the period of the timer in `periodUnit`\n                                    // (if `periodic` is set to `true`)\n        periodUnit: 'd',            // the unit of measurement period timer\n\n        doubleNumbers: true,        // `true` - show hours, minutes and seconds with leading zeros\n                                    // (2 hours 5 minutes 4 seconds = 02:05:04)\n        effectType: 'none',         // The effect of changing the value of seconds\n        lang: 'eng',                // localization of a countdown signatures (days, hours, minutes, seconds)\n        headTitle: '',              // text above the countdown (may be as html string)\n        footTitle: '',              // text under the countdown (may be as html string)\n        afterDeadline: function(timerBlock){\n            timerBlock.bodyBlock.html('<p style=\"font-size: 1.2em;\">The countdown is finished!</p>');\n        }\n    };\n\n    var ITEMS_HAS_OPTIONS = {\n        second: false,\n        minute: false,\n        hour: false,\n        day: false\n    };\n\n    var SyoTimer = {\n        /**\n         * Init syotimer on DOM\n         * @param settings\n         * @returns {Array|Object|*}\n         */\n        init: function(settings) {\n            var options = $.extend({}, DEFAULTS, settings || {});\n            options.itemTypes = staticMethod.getItemTypesByLayout(options.layout);\n            options._itemsHas = $.extend({}, ITEMS_HAS_OPTIONS);\n            for (var i = 0; i < options.itemTypes.length; i++) {\n                options._itemsHas[options.itemTypes[i]] = true;\n            }\n            return this.each(function() {\n                var elementBox = $(this);\n                elementBox.data('syotimer-options', options);\n                SyoTimer._render.apply(this, []);\n                SyoTimer._perSecondHandler.apply(this, []);\n            });\n        },\n\n        /**\n         * Rendering base elements of countdown\n         * @private\n         */\n        _render: function() {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options');\n\n            var timerItem = staticMethod.getTimerItem(),\n                headBlock = $('<div/>', {\"class\": 'syotimer__head'})\n                    .html(options.headTitle),\n                bodyBlock = $('<div/>', {\"class\": 'syotimer__body'}),\n                footBlock = $('<div/>', {\"class\": 'syotimer__footer'})\n                    .html(options.footTitle),\n                itemBlocks = {};\n\n            for (var i = 0; i < options.itemTypes.length; i++) {\n                var item = timerItem.clone();\n                item.addClass('syotimer-cell_type_' + options.itemTypes[i]);\n                bodyBlock.append(item);\n                itemBlocks[options.itemTypes[i]] = item;\n            }\n            var timerBlocks = {\n                    headBlock: headBlock,\n                    bodyBlock: bodyBlock,\n                    footBlock: footBlock\n                };\n            elementBox.data('syotimer-blocks', timerBlocks)\n                .data('syotimer-items', itemBlocks)\n                .addClass('syotimer')\n                .append(headBlock)\n                .append(bodyBlock)\n                .append(footBlock);\n        },\n\n        /**\n         * Handler called per seconds while countdown is not over\n         * @private\n         */\n        _perSecondHandler: function() {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options');\n            $('.syotimer-cell > .syotimer-cell__value', elementBox).css( 'opacity', 1 );\n            var currentDate = new Date(),\n                deadLineDate = new Date(\n                    options.year,\n                    options.month - 1,\n                    options.day,\n                    options.hour,\n                    options.minute,\n                    options.second\n                ),\n                differenceInMilliSec = staticMethod.getDifferenceWithTimezone(currentDate, deadLineDate, options),\n                secondsToDeadLine = staticMethod.getSecondsToDeadLine(differenceInMilliSec, options);\n            if ( secondsToDeadLine >= 0 ) {\n                SyoTimer._refreshUnitsDom.apply(this, [secondsToDeadLine]);\n                SyoTimer._applyEffectSwitch.apply(this, [options.effectType]);\n            } else {\n                elementBox = $.extend(elementBox, elementBox.data('syotimer-blocks'));\n                options.afterDeadline( elementBox );\n            }\n        },\n\n        /**\n         * Refresh unit DOM of countdown\n         * @param secondsToDeadLine\n         * @private\n         */\n        _refreshUnitsDom: function(secondsToDeadLine) {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options'),\n                itemBlocks = elementBox.data('syotimer-items'),\n                unitList = options.itemTypes,\n                unitsToDeadLine = staticMethod.getUnitsToDeadLine( secondsToDeadLine );\n\n            if ( !options._itemsHas.day ) {\n                unitsToDeadLine.hour += unitsToDeadLine.day * 24;\n            }\n            if ( !options._itemsHas.hour ) {\n                unitsToDeadLine.minute += unitsToDeadLine.hour * 60;\n            }\n            if ( !options._itemsHas.minute ) {\n                unitsToDeadLine.second += unitsToDeadLine.minute * 60;\n            }\n            for(var i = 0; i < unitList.length; i++) {\n                var unit = unitList[i],\n                    unitValue = unitsToDeadLine[unit],\n                    itemBlock = itemBlocks[unit];\n                itemBlock.data('syotimer-unit-value', unitValue);\n                $('.syotimer-cell__value', itemBlock).html(staticMethod.format2(\n                    unitValue,\n                    (unit !== DAY) ? options.doubleNumbers : false\n                ));\n                $('.syotimer-cell__unit', itemBlock).html($.syotimerLang.getNumeral(\n                    unitValue,\n                    options.lang,\n                    unit\n                ));\n            }\n        },\n\n        /**\n         * Applying effect of changing numbers\n         * @param effectType\n         * @param unit\n         * @private\n         */\n        _applyEffectSwitch: function(effectType, unit) {\n            unit = unit || SECOND;\n            var element = this,\n                elementBox = $(element);\n            if ( effectType === 'none' ) {\n                setTimeout(function () {\n                    SyoTimer._perSecondHandler.apply(element, []);\n                }, 1000);\n            } else if ( effectType === 'opacity' ) {\n                var itemBlocks = elementBox.data('syotimer-items'),\n                    unitItemBlock = itemBlocks[unit];\n                if (unitItemBlock) {\n                    var nextUnit = UNIT_LINKED_LIST.next(unit),\n                        unitValue = unitItemBlock.data('syotimer-unit-value');\n                    $('.syotimer-cell__value', unitItemBlock).animate(\n                        {opacity: 0.1},\n                        1000,\n                        'linear',\n                        function () {\n                            SyoTimer._perSecondHandler.apply(element, []);\n                        }\n                    );\n                    if (nextUnit && unitValue === 0) {\n                        SyoTimer._applyEffectSwitch.apply(element, [effectType, nextUnit]);\n                    }\n                }\n            }\n        }\n    };\n\n    var staticMethod = {\n        /**\n         * Return once cell DOM of countdown: day, hour, minute, second\n         * @returns {object}\n         */\n        getTimerItem: function() {\n            var timerCellValue = $('<div/>', {\n                    \"class\": 'syotimer-cell__value',\n                    \"text\": '0'\n                }),\n                timerCellUnit = $('<div/>', {\"class\": 'syotimer-cell__unit'}),\n                timerCell = $('<div/>', {\"class\": 'syotimer-cell'});\n            timerCell.append(timerCellValue)\n                .append(timerCellUnit);\n            return timerCell;\n        },\n\n        getItemTypesByLayout: function(layout) {\n            var itemTypes = [];\n            for (var i = 0; i < layout.length; i++) {\n                itemTypes.push(LAYOUT_TYPES[layout[i]]);\n            }\n            return itemTypes;\n        },\n\n        /**\n         * Getting count of seconds to deadline\n         * @param differenceInMilliSec\n         * @param options\n         * @returns {*}\n         */\n        getSecondsToDeadLine: function(differenceInMilliSec, options) {\n            var secondsToDeadLine,\n                differenceInSeconds = differenceInMilliSec / 1000;\n            differenceInSeconds = Math.floor( differenceInSeconds );\n            if ( options.periodic ) {\n                var additionalInUnit,\n                    differenceInUnit,\n                    periodUnitInSeconds = staticMethod.getPeriodUnit(options.periodUnit),\n                    fullTimeUnitsBetween = differenceInMilliSec / (periodUnitInSeconds * 1000);\n                fullTimeUnitsBetween = Math.ceil( fullTimeUnitsBetween );\n                fullTimeUnitsBetween = Math.abs( fullTimeUnitsBetween );\n                if ( differenceInSeconds >= 0 ) {\n                    differenceInUnit = fullTimeUnitsBetween % options.periodInterval;\n                    differenceInUnit = ( differenceInUnit === 0 )? options.periodInterval : differenceInUnit;\n                    differenceInUnit -= 1;\n                } else {\n                    differenceInUnit = options.periodInterval - fullTimeUnitsBetween % options.periodInterval;\n                }\n                additionalInUnit = differenceInSeconds % periodUnitInSeconds;\n\n                // fix когда дедлайн раньше текущей даты,\n                // возникает баг с неправильным расчетом интервала при different пропорциональной periodUnit\n                if ( ( additionalInUnit === 0 ) && ( differenceInSeconds < 0 ) ) {\n                    differenceInUnit--;\n                }\n                secondsToDeadLine = Math.abs( differenceInUnit * periodUnitInSeconds + additionalInUnit );\n            } else {\n                secondsToDeadLine = differenceInSeconds;\n            }\n            return secondsToDeadLine;\n        },\n\n        /**\n         * Getting count of units to deadline\n         * @param secondsToDeadLine\n         * @returns {{}}\n         */\n        getUnitsToDeadLine: function(secondsToDeadLine) {\n            var unit = DAY,\n                unitsToDeadLine = {};\n            do {\n                var unitInMilliSec = staticMethod.getPeriodUnit(unit);\n                unitsToDeadLine[unit] = Math.floor(secondsToDeadLine / unitInMilliSec);\n                secondsToDeadLine = secondsToDeadLine % unitInMilliSec;\n            } while (unit = UNIT_LINKED_LIST.prev(unit));\n            return unitsToDeadLine;\n        },\n\n        /**\n         * Determine a unit of period in milliseconds\n         * @param given_period_unit\n         * @returns {number}\n         */\n        getPeriodUnit: function(given_period_unit) {\n            switch (given_period_unit) {\n                case 'd':\n                case DAY:\n                    return DAY_IN_SEC;\n                case 'h':\n                case HOUR:\n                    return HOUR_IN_SEC;\n                case 'm':\n                case MINUTE:\n                    return MINUTE_IN_SEC;\n                case 's':\n                case SECOND:\n                    return 1;\n            }\n        },\n\n        getDifferenceWithTimezone: function(currentDate, deadLineDate, options) {\n            var differenceByLocalTimezone = deadLineDate.getTime() - currentDate.getTime(),\n                amendmentOnTimezone = 0,\n                amendmentOnTransferTime = 0,\n                amendment;\n            if ( options.timeZone !== 'local' ) {\n                var timezoneOffset = parseFloat(options.timeZone) * staticMethod.getPeriodUnit(HOUR),\n                    localTimezoneOffset = - currentDate.getTimezoneOffset() * staticMethod.getPeriodUnit(MINUTE);\n                amendmentOnTimezone = (timezoneOffset - localTimezoneOffset) * 1000;\n            }\n            if ( options.ignoreTransferTime ) {\n                var currentTimezoneOffset = -currentDate.getTimezoneOffset() * staticMethod.getPeriodUnit(MINUTE),\n                    deadLineTimezoneOffset = -deadLineDate.getTimezoneOffset() * staticMethod.getPeriodUnit(MINUTE);\n                amendmentOnTransferTime = (currentTimezoneOffset - deadLineTimezoneOffset) * 1000;\n            }\n            amendment = amendmentOnTimezone + amendmentOnTransferTime;\n            return differenceByLocalTimezone - amendment;\n        },\n\n        /**\n         * Formation of numbers with leading zeros\n         * @param number\n         * @param isUse\n         * @returns {string}\n         */\n        format2: function(number, isUse) {\n            isUse = (isUse !== false);\n            return ( ( number <= 9 ) && isUse ) ? ( \"0\" + number ) : ( \"\" + number );\n        }\n    };\n\n    var methods = {\n        setOption: function(name, value) {\n            var elementBox = $(this),\n                options = elementBox.data('syotimer-options');\n            if ( options.hasOwnProperty( name ) ) {\n                options[name] = value;\n                elementBox.data('syotimer-options', options);\n            }\n        }\n    };\n\n    $.fn.syotimer = function(options){\n        if ( typeof options === 'string' && ( options === \"setOption\" ) ) {\n            var otherArgs = Array.prototype.slice.call(arguments, 1);\n            return this.each(function() {\n                methods[options].apply( this, otherArgs );\n            });\n        } else if (options === null || options === undefined || typeof options === 'object'){\n            return SyoTimer.init.apply(this, [options]);\n        } else {\n            $.error('SyoTimer. Error in call methods: methods is not exist');\n        }\n    };\n","    $.syotimerLang = {\n        rus: {\n            second: ['секунда', 'секунды', 'секунд'],\n            minute: ['минута', 'минуты', 'минут'],\n            hour: ['час', 'часа', 'часов'],\n            day: ['день', 'дня', 'дней'],\n            handler: 'rusNumeral'\n        },\n        eng: {\n            second: ['second', 'seconds'],\n            minute: ['minute', 'minutes'],\n            hour: ['hour', 'hours'],\n            day: ['day', 'days']\n        },\n        por: {\n            second: ['segundo', 'segundos'],\n            minute: ['minuto', 'minutos'],\n            hour: ['hora', 'horas'],\n            day: ['dia', 'dias']\n        },\n        spa: {\n            second: ['segundo', 'segundos'],\n            minute: ['minuto', 'minutos'],\n            hour: ['hora', 'horas'],\n            day: ['día', 'días']\n        },\n        heb: {\n            second: ['שניה', 'שניות'],\n            minute: ['דקה', 'דקות'],\n            hour: ['שעה', 'שעות'],\n            day: ['יום', 'ימים']\n        },\n\n        /**\n         * Universal function for get correct inducement of nouns after a numeral (`number`)\n         * @param number\n         * @returns {number}\n         */\n        universal: function(number) {\n            return ( number === 1 ) ? 0 : 1;\n        },\n\n        /**\n         * Get correct inducement of nouns after a numeral for Russian language (rus)\n         * @param number\n         * @returns {number}\n         */\n        rusNumeral: function(number) {\n            var cases = [2, 0, 1, 1, 1, 2],\n                index;\n            if ( number % 100 > 4 && number % 100 < 20 ) {\n                index = 2;\n            } else {\n                index = cases[(number % 10 < 5) ? number % 10 : 5];\n            }\n            return index;\n        },\n\n        /**\n         * Getting the correct declension of words after numerals\n         * @param number\n         * @param lang\n         * @param unit\n         * @returns {string}\n         */\n        getNumeral: function(number, lang, unit) {\n            var handlerName = $.syotimerLang[lang].handler || 'universal',\n                index = this[handlerName](number);\n            return $.syotimerLang[lang][unit][index];\n        }\n    };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import syotimer from './libs/syoTimer/jquery.syotimer';\nimport './libs/syoTimer/syotimer.lang';\n\nvar countdown = $('.countdown');\nvar countdown_time = countdown.text().split('/');\ncountdown.text('');\n$('.countdown').syotimer({\n  year: countdown_time[0],\n  month: countdown_time[1],\n  day: countdown_time[2],\n  hour: 0,\n  minute: 0,\n  layout: 'dhm',\n  lang: 'rus',\n});\n\nconst reviewsCarousel = $('.reviews-carousel');\nif (reviewsCarousel.length > 0) {\n  $.ajax({\n    url: 'index.php?route=extension/module/reviews/getLatestReviews',\n    type: 'post',\n    dataType: \"json\",\n    data: { limit: 10 },\n  }).done((res) => {\n    const { reviews } = res;\n    if (reviews) {\n\n      let output = '';\n      reviews.forEach(element => {\n        let date = element.created_at.split(' ')[0].split('-');\n        let photo = element.photo ? `<img src=\"/image/catalog/reviews/${element.photo}\" alt=\"${ element.name }\" class=\"reviews-carousel__photo\"/>` : ''\n        let mark = '';\n        for(var i = 1; i <= 5; i++){\n          if(element.mark >= i){\n            mark += '<i class=\"fa fa-star reviews-carousel__star reviews-carousel__star_orange\" aria-hidden=\"true\"></i>';\n          }else{\n            mark += '<i class=\"fa fa-star reviews-carousel__star reviews\" aria-hidden=\"true\"></i>';\n          }\n        }\n\n        output += `\n        <div class=\"reviews-carousel__item swiper-slide\">\n          <div class=\"reviews-carousel__wrap\">\n            <div class=\"reviews-carousel-top\">\n              ${photo}\n              <div class=\"reviews-carousel-block\">\n                <ul class=\"reviews-carousel-info list-inline\">\n                  <li class=\"reviews-carousel__name\">${element.name} \\/</li>\n                  <li class=\"reviews-carousel__city\">${element.city}</li>\n                  <li class=\"reviews-carousel__date\">${date[2]}.${date[1]}.${date[0]}</li>\n                  <li class=\"reviews-carousel__mark\">${mark}</li>\n                </ul>\n                <p class=\"reviews-carousel__text\">${element.msg.slice(0, 200)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        `;\n      });\n\n      $('.reviews-carousel .swiper-wrapper').html(output);\n      $('.reviews-carousel .swiper-container').swiper({\n        mode: 'horizontal',\n        speed: 2000,\n        loop: true,\n        autoplayDisableOnInteraction: true,\n        nextButton: '.swiper-button-next',\n        prevButton: '.swiper-button-prev',\n      });\n    \n    }\n    })\n    .fail((err) => {\n      console.log(err);\n    });\n \n}\n"],"sourceRoot":""}